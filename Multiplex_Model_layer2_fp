function R = Multiplex_Model_layer2_fp(N0,t,p,m1,m2)
%% 程序功能：产生一个三层增长网络

%% 三层初始网络:完全图
    A = ones(N0,N0,3);
    R{1,1}=A(:,:,1)-diag(diag(A(:,:,1)));
    R{1,2}=A(:,:,2)-diag(diag(A(:,:,2)));
    
%% 网络增长
    T = N0;
    while T <= t
        s = [sum(R{1,1},1);sum(R{1,2},1)];   %计算两层网络中每个节点的度；
        f = s';                              %连接函数            
        bsize = size(f,1);  
        
%% 以概率p向网络中添加新节点并同时产生三个拷贝节点
        if rand(1,1) < p          %产生随机数，即选择概率；并据此走顶点步；  
         deg = sortrows([(1:bsize)',f]);
          r1 = randsample(deg(:,1),m1,'true',deg(:,2)/max(deg(:,2))); 
          Ur1 = unique(r1);
          while m1~=length(Ur1)
               r1 = randsample(deg(:,1),m1,'true',deg(:,2)/max(deg(:,2))); 
               Ur1 = unique(r1);
          end  
          
          r2 = randsample(deg(:,1),m2,'true',deg(:,3)/max(deg(:,3))); 
          Ur2 = unique(r2);
          while m2~=length(Ur2)
               r2 = randsample(deg(:,1),m2,'true',deg(:,3)/max(deg(:,3))); 
               Ur2 = unique(r2);
          end  
          R{1,1}(bsize+1,bsize+1) = 0;
          R{1,2}(bsize+1,bsize+1) = 0;
          r1size = size(r1,1);
          r2size = size(r2,1);
          for node=1:r1size
            R{1,1}(bsize+1,r1(node)) = 1;
            R{1,1}(r1(node),bsize+1) = 1;
          end 
          for node=1:r2size
            R{1,2}(bsize+1,r2(node)) = 1;
            R{1,2}(r2(node),bsize+1) = 1;
          end 
%% 以1-p的概率向三层网络中分别添加m1,m2,m3条边
        else       
            deg = sortrows([(1:bsize)',f]); 
              r1 = randsample(deg(:,1),2,'true',deg(:,2)/max(deg(:,2)));
              Ur1 = unique(r1);
            while length(Ur1)~=2       %选择不同的节点对；
               r1 = randsample(deg(:,1),2,'true',deg(:,2)/max(deg(:,2))); 
               Ur1 = unique(r1);
            end     
              r2 = randsample(deg(:,1),2,'true',deg(:,3)/max(deg(:,3)));
              Ur2 = unique(r2);
            while length(Ur2)~=2       %选择不同的节点对；
               r2 = randsample(deg(:,1),2,'true',deg(:,3)/max(deg(:,3))); 
               Ur2 = unique(r2);
            end                  
               R{1,1}(r1(1),r1(2)) = 1;     %把m1个节点添加到新的网络中 
               R{1,1}(r1(2),r1(1)) = 1; 
               R{1,2}(r2(1),r2(2)) = 1;     %把m2个节点添加到新的网络中 
               R{1,2}(r2(2),r2(1)) = 1;  
             r1m = [];  
             r2m = [];  
             r3m = [];    
%% 向第一层网络中添加m1条边            
          for i = 2:m1    
              r1m = [r1m, r1];
              r1 = randsample(deg(:,1),2,'true',deg(:,2)/max(deg(:,2)));           
              aa = r1m(1,end)==r1(1) &  r1m(2,end)==r1(2);
              Ur1 = unique(r1);           
            while length(Ur1)~=2 || sum(aa)==1      %选择不同的节点对；
               r1 = randsample(deg(:,1),2,'true',deg(:,2)/max(deg(:,2)));
               Ur1 = unique(r1);
               aa = r1m(1,end)==r1(1) &  r1m(2,end)==r1(2);
            end
              R{1,1}(r1(1),r1(2)) = 1;     %把m个节点添加到新的网络中 
              R{1,1}(r1(2),r1(1)) = 1;    
          end 
          
 %% 向第二层网络中添加m2条边                     
          for j = 2:m2 
              r2m = [r2m, r2];
              r2 = randsample(deg(:,1),2,'true',deg(:,3)/max(deg(:,3)));           
              bb = r2m(1,end)==r2(1) &  r2m(2,end)==r2(2);
              Ur2 = unique(r2);           
            while length(Ur2)~=2 || sum(bb)==1      %选择不同的节点对；
               r2 = randsample(deg(:,1),2,'true',deg(:,3)/max(deg(:,3)));
               Ur2 = unique(r2);
               bb = r2m(1,end)==r2(1) &  r2m(2,end)==r2(2);
            end
              R{1,2}(r2(1),r2(2)) = 1;     %把m个节点添加到新的网络中 
              R{1,2}(r2(2),r2(1)) = 1;   
          end     
        end
    T=T+1;
    end
  strFileName = sprintf('layer2_fp_%d_%d_%0.2f_%d_%d.mat',...
      N0,t,p,m1,m2);
    save(strFileName,'R')
% save('Multiplex_Model_layer2_fp.mat','R')
end

